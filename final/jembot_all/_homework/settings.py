"""
Django settings for _homework project.

Generated by 'django-admin startproject' using Django 5.2.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""
import os
from dotenv import load_dotenv

# 환경 변수 로드
load_dotenv()

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure-!gz)%vbc2%=dgz0^s$#w-a%(@id788n-*vzw%&8489f6g1bg#f"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "django.contrib.sites",
    "app",
    "accounts",
    "allauth",
    "allauth.account",
    "allauth.socialaccount",
    "allauth.socialaccount.providers.google",
    "allauth.socialaccount.providers.naver",
    "allauth.socialaccount.providers.kakao",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    "allauth.account.middleware.AccountMiddleware",
]

ROOT_URLCONF = "_homework.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [BASE_DIR/'templates'],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "_homework.wsgi.application"


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'jembotdatabase',
        'USER' : 'jembot',
        'PASSWORD' : 'jembot',
        'HOST' : '127.0.0.1',
        'PORT' : '3306',
        'OPTIONS': {
            'charset': 'utf8mb4',
        },
    }
}



# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'ko-kr'

TIME_ZONE = 'Asia/Seoul'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = "/static/"
STATICFILES_DIRS = [
    BASE_DIR / 'static', 
]


# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

# 커스텀 유저 모델 설정
AUTH_USER_MODEL = 'app.CustomUser'

# 로그인/로그아웃 리다이렉트 URL
LOGIN_URL = '/accounts/'
LOGIN_REDIRECT_URL = '/jembot/'
LOGOUT_REDIRECT_URL = '/accounts/'

# allauth 설정
AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',
    'allauth.account.auth_backends.AuthenticationBackend',
]

SITE_ID = 1

# 소셜 로그인 처리 시, django-allauth의 기본 기능 대신 우리가 직접 만든 어댑터 클래스를 사용하도록 지정합니다.
SOCIALACCOUNT_ADAPTER = 'accounts.adapter.CustomSocialAccountAdapter'

# 일반 회원가입 처리 시, 파일 업로드를 위한 커스텀 어댑터를 사용합니다.
ACCOUNT_ADAPTER = 'accounts.adapter.CustomAccountAdapter'

# django-allauth 설정 (새로운 방식)
ACCOUNT_LOGIN_METHODS = {'email'}
ACCOUNT_SIGNUP_FIELDS = ['email*', 'password1*', 'password2*']

# 소셜 계정으로 처음 로그인할 때, 별도의 확인 절차 없이 자동으로 회원가입을 완료합니다.
SOCIALACCOUNT_AUTO_SIGNUP = True

# 로그아웃을 완료한 후 이동할 URL
ACCOUNT_LOGOUT_REDIRECT_URL = '/accounts/'

# 회원가입 후 이메일 인증 절차를 사용하지 않도록 설정합니다. ('mandatory'로 설정 시 인증 필요)
ACCOUNT_EMAIL_VERIFICATION = 'none'

# 개발 및 테스트 편의를 위해, 소셜 로그인 과정을 GET 요청으로도 시작할 수 있도록 허용합니다.
SOCIALACCOUNT_LOGIN_ON_GET = True

# 소셜 로그인 제공자 설정
SOCIALACCOUNT_PROVIDERS = {
    'google': {
        'APP': {
            'client_id': os.getenv('GOOGLE_OAUTH2_CLIENT_ID'),
            'secret': os.getenv('GOOGLE_OAUTH2_CLIENT_SECRET'),  
            'key': ''
        },
        'SCOPE': [
            'profile',
            'email',
        ],
        'AUTH_PARAMS': {
            'access_type': 'online',
        }
    },
    'naver': {
        'SCOPE': [
            'name',      
            'email',     
            'nickname' 
        ],
        'APP': {
            'client_id': os.getenv("NAVER_LOGIN_CLIENT_ID"),
            'secret': os.getenv("NAVER_LOGIN_CLIENT_SECRET"),
            'key': '' 
        }
    },
    'kakao': {
        'SCOPE': [
            'profile_nickname',
            'account_email',
            'profile_image'
        ],
        'APP': {
            'client_id': os.getenv("KAKAO_CLIENT_ID"),
            'secret': os.getenv("KAKAO_CLIENT_SECRET"),
            'key': '' 
        }
    }
}

# 미디어 파일 설정
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# 네이버 뉴스 API 설정
NAVER_CLIENT_ID = os.getenv('NAVER_CLIENT_ID')
NAVER_CLIENT_SECRET = os.getenv('NAVER_CLIENT_SECRET')

# 세션 설정
SESSION_COOKIE_AGE = 3600 * 24 * 7  # 7일
SESSION_EXPIRE_AT_BROWSER_CLOSE = False